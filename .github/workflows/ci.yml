name: ci

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            constraints.txt
            requirements/dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Ruff
        run: ruff check .

      - name: Black
        run: black --check .

      - name: Mypy
        run: mypy .

  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            constraints.txt
            requirements/dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Smoke tests
        env:
          MPLBACKEND: Agg
          LIVE_DISABLE_NETWORK: "1"
        run: |
          set -o pipefail
          pytest -q -k "smoke" | tee pytest-smoke.log

      - name: Upload smoke log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-smoke
          path: pytest-smoke.log

  tests:
    needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            constraints.txt
            requirements/dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Pytest
        env:
          MPLBACKEND: Agg
          LIVE_DISABLE_NETWORK: "1"
        run: |
          set -o pipefail
          pytest -q --maxfail=1 --disable-warnings | tee pytest.log

      - name: Upload pytest log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-${{ matrix.python-version }}
          path: pytest.log

  windows-path:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Windows newline/path checks
        shell: bash
        run: |
          pytest -q -k "(windows or newline or path)" | tee pytest-windows.log

      - name: Upload windows log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-windows
          path: pytest-windows.log
