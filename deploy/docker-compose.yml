version: "3.9"

services:
  runner:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    env_file:
      - .env
    volumes:
      - runs_data:/app/runs
      - configs_data:/app/configs
      - logs_data:/app/logs
      - backups_data:/app/backups
    command: ["/bin/bash", "-c", "${RUNNER_CMD:-python -m logos.run --mode paper}"]
    restart: unless-stopped

  monitor:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    env_file:
      - .env
    volumes:
      - runs_data:/app/runs
      - configs_data:/app/configs
      - logs_data:/app/logs
      - backups_data:/app/backups
    command:
      [
        "/bin/bash",
        "-c",
        "python scripts/ops/monitor.py --loop --interval ${MONITOR_INTERVAL:-300}",
      ]
    restart: unless-stopped

  backup:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    env_file:
      - .env
    volumes:
      - runs_data:/app/runs
      - configs_data:/app/configs
      - logs_data:/app/logs
      - backups_data:/app/backups
    command:
      [
        "/bin/bash",
        "-c",
        "while true; do scripts/ops/backup.sh; sleep ${BACKUP_INTERVAL:-86400}; done",
      ]
    restart: unless-stopped

  janitor:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    env_file:
      - .env
    volumes:
      - runs_data:/app/runs
      - configs_data:/app/configs
      - logs_data:/app/logs
      - backups_data:/app/backups
    command:
      [
        "/bin/bash",
        "-c",
        "while true; do scripts/ops/janitor.sh; sleep ${JANITOR_INTERVAL:-21600}; done",
      ]
    restart: unless-stopped

volumes:
  runs_data:
  configs_data:
  logs_data:
  backups_data:
